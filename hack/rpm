#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

BASE_DIR=$(cd $(dirname $0)/.. && pwd)

COMMIT_NUM=$(git log --oneline | wc -l | sed -e 's/^[ \t]*//')
GIT_COMMIT=$(git rev-parse --short "HEAD^{commit}")
RPM_VERSION=$1
RPM_IMAGE="criu-${RPM_VERSION}:${COMMIT_NUM}"
OUTPUT_PATH=$BASE_DIR/_output
mkdir -p ${OUTPUT_PATH}

cd $BASE_DIR

git archive -o ${OUTPUT_PATH}/criu.tar.gz \
  --format=tar \
  --prefix=criu-${RPM_VERSION}/ \
  HEAD

cp ${BASE_DIR}/hack/Dockerfile ${OUTPUT_PATH}
cp ${BASE_DIR}/hack/criu.spec ${OUTPUT_PATH}

cat >>${OUTPUT_PATH}/Dockerfile <<EOF

RUN mkdir -p /root/rpmbuild/SPECS
COPY criu.spec /root/rpmbuild/SPECS
COPY criu.tar.gz /root/rpmbuild/SOURCES
RUN echo '%_topdir /root/rpmbuild' > /root/.rpmmacros \
          && echo '%__os_install_post %{nil}' >> /root/.rpmmacros \
                  && echo '%debug_package %{nil}' >> /root/.rpmmacros
WORKDIR /root/rpmbuild/SPECS

RUN yum install  -y gnutls-devel libbsd-devel asciidoc xmlto python-devel

RUN rpmbuild -bb \
  --define 'version ${RPM_VERSION}' \
  --define 'commit ${GIT_COMMIT}' \
  criu.spec
EOF

(cd "${OUTPUT_PATH}" && docker build --network=host -t "$RPM_IMAGE" .)
docker run --rm "$RPM_IMAGE" bash -c 'cd /root/rpmbuild && tar -c *RPMS' | tar xvC "${OUTPUT_PATH}"
